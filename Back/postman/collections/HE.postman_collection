{
	"info": {
		"_postman_id": "09629037-12b3-4e49-8a80-2fa0c0febaeb",
		"name": "HE Copy 3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17281688"
	},
	"item": [
		{
			"name": "Perfiles",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JuanT\",\r\n   \"password\": \"juan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Perfil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil"
							]
						}
					},
					"response": [
						{
							"name": "Add Perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfiles",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfiles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n        \"nombre\": \"Juan\",\n        \"correo\": \"jp.her@her.com\",\n        \"fechaDeNacimiento\": \"02/02/2000\",\n        \"documento\": 1002\n    }\n]"
						}
					]
				},
				{
					"name": "Get perfiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of perfiles > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								""
							]
						}
					},
					"response": [
						{
							"name": "Get perfiles",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfiles/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfiles",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n        \"nombre\": \"Juan\",\n        \"correo\": \"jp.her@her.com\",\n        \"fechaDeNacimiento\": \"02/02/2000\",\n        \"documento\": 1002\n    }\n]"
						}
					]
				},
				{
					"name": "Get perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "137"
								},
								{
									"key": "ETag",
									"value": "W/\"89-9vS96Kz72tZR2jQJi8wppV5BY+w\""
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 00:08:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}"
						}
					]
				},
				{
					"name": "Get non existent profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id, no se encontro\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}"
							]
						}
					},
					"response": [
						{
							"name": "Get non existent profile",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/00000000-e89b-12d3-a456-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"00000000-e89b-12d3-a456-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "ETag",
									"value": "W/\"43-3LUbNNxAqoNUy7VLZtR7zPSB0EU\""
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 00:08:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id, no se encontro\"\n}"
						}
					]
				},
				{
					"name": "Update perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@hernandez.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update perfil",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@hernandez.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "143"
								},
								{
									"key": "ETag",
									"value": "W/\"8f-2gXUcxKXau+kStAuVBsD9PxXoq0\""
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 00:09:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@hernandez.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}"
						}
					]
				},
				{
					"name": "Update perfil mal id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id, no se encontro\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@hernandez.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}"
							]
						}
					},
					"response": [
						{
							"name": "Update perfil mal id",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@hernandez.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "ETag",
									"value": "W/\"43-3LUbNNxAqoNUy7VLZtR7zPSB0EU\""
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 00:14:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id, no se encontro\"\n}"
						}
					]
				},
				{
					"name": "Delete Perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete Perfil",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 00:10:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Perfil inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id, no se encontro\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete Perfil inexistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "ETag",
									"value": "W/\"43-3LUbNNxAqoNUy7VLZtR7zPSB0EU\""
								},
								{
									"key": "Date",
									"value": "Sun, 12 Mar 2023 00:15:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id, no se encontro\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Metricas",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JuanT\",\r\n   \"password\": \"juan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add metricas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{metrica_id}}\",\n    \"nombre\": \"Juan\",\n    \"unidad\": \"Likes\",\n    \"valor\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/metricas/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metricas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of perfiles > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/metricas/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metrica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non existent metrica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la metrica con ese id, no se encontro\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/metricas/{{metrica_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								"{{metrica_id_mal}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update metricas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Juan\",\n    \"unidad\": \"Likes\",\n    \"valor\": 100000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update metricas mal id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la metrica con ese id, no se encontro\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Juan\",\n    \"unidad\": \"disLikes\",\n    \"valor\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/metricas/{{metrica_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								"{{metrica_id_mal}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete metricas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete metricas mal id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la metrica con ese id, no se encontro\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/metricas/{{metrica_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								"{{metrica_id_mal}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ingrediente Admin",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaIngredienteT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ingrediente_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"descripcion\": \"Queso de cabra\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Add ingrediente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All ingredientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of ingredientes > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Get All ingredientes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one ingrediente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid ingrediente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"descripcion\": \"Queso de vaca\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a ingrediente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an invalid ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"hola\",\r\n    \"descripcion\": \"invalido\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid ingrediente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"hola\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a ingrediente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid ingrediente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Ingrediente",
			"item": [
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaIngredienteL\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaIngredienteE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaIngredienteD\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ingrediente_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"descripcion\": \"Queso de cabra\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Add ingrediente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All ingredientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of ingredientes > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Get All ingredientes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one ingrediente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid ingrediente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"descripcion\": \"Queso de vaca\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a ingrediente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an invalid ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"hola\",\r\n    \"descripcion\": \"invalido\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid ingrediente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"hola\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a ingrediente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid ingrediente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Receta Admin",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Receta para hacer queso con leche\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All recetas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of recetas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Get All recetas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/{{receta_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Nueva descripcion para la receta\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"Leche caliente\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas/{{receta_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 2000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"Leche caliente\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Nueva descripcion para la receta\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"Leche caliente\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"hola\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/{{receta_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Receta",
			"item": [
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaL\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaD\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Receta para hacer queso con leche\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All recetas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of recetas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Get All recetas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get one receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/{{receta_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get one receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Nueva descripcion para la receta\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"Leche caliente\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas/{{receta_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 2000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"Leche caliente\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Nueva descripcion para la receta\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"Leche caliente\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"hola\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"De cabra\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/{{receta_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Cantidad Admin",
			"item": [
				{
					"name": "Obtener token Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaCantidadT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token Admin Receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAR\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token Admin Ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAI\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaIngredienteT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"cantidad_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades"
							]
						}
					},
					"response": [
						{
							"name": "Add a cantidad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get cantidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of cantidades > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades"
							]
						}
					},
					"response": [
						{
							"name": "Get cantidades",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a cantidad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"{{cantidad_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Cantidad no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid cantidad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\": 3,\r\n    \"unidad\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a cantidad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\": 3,\r\n    \"unidad\": \"Kg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"{{cantidad_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an invalid cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Cantidad no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\":0,\r\n    \"unidad\": \"Invalida\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid cantidad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\":0,\r\n    \"unidad\": \"Invalida\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a cantidad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"{{cantidad_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Cantidad no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid cantidad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a cantidad 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"cantidad_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades"
							]
						}
					},
					"response": [
						{
							"name": "Add a cantidad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAR}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Receta para hacer queso con leche\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ingrediente_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAI}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"descripcion\": \"Queso de cabra\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Add ingrediente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add ingrediente 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ingrediente_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAI}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Leche\",\r\n    \"descripcion\": \"Leche de cabra\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Add ingrediente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an ingrediente to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add an ingrediente to a receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an invalid ingrediente to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add an invalid ingrediente to a receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an ingrediente to an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add an ingrediente to an invalid receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ingrediente of a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid ingrediente of a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ingrediente to an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ingrediente to an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ingrediente non-associated to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado en la receta\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ingrediente non-associated to a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id_1}}/ingredientes/{{ingrediente_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id_1}}",
										"ingredientes",
										"{{ingrediente_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all ingredientes of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Get all ingredientes of a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all ingredientes of an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Get all ingredientes of an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ingrediente of a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ingrediente of an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ingrediente of an invalid receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes",
										"{{ingrediente_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid ingrediente of a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ingrediente non-associated to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado en la receta\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ingrediente non-associated to a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Cantidad",
			"item": [
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaCantidadL\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaCantidadE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaCantidadD\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura Receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenER\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura Ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenEI\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaIngredienteE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"cantidad_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades"
							]
						}
					},
					"response": [
						{
							"name": "Add a cantidad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get cantidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of cantidades > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades"
							]
						}
					},
					"response": [
						{
							"name": "Get cantidades",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a cantidad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"{{cantidad_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Cantidad no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid cantidad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\": 3,\r\n    \"unidad\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update a cantidad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\": 3,\r\n    \"unidad\": \"Kg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"{{cantidad_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an invalid cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Cantidad no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\":0,\r\n    \"unidad\": \"Invalida\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Update an invalid cantidad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\":0,\r\n    \"unidad\": \"Invalida\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a cantidad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/{{cantidad_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"{{cantidad_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Cantidad no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid cantidad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cantidades/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a cantidad 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"cantidad_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cantidades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades"
							]
						}
					},
					"response": [
						{
							"name": "Add a cantidad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cantidad\": 2,\r\n    \"unidad\": \"Kg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cantidades",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cantidades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Receta para hacer queso con leche\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add ingrediente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ingrediente_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenEI}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"descripcion\": \"Queso de cabra\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Add ingrediente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add ingrediente 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"ingrediente_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenEI}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Leche\",\r\n    \"descripcion\": \"Leche de cabra\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Add ingrediente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso\",\r\n    \"calorias\": 402,\r\n    \"infoAdicional\": \"No info\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ingredientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an ingrediente to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add an ingrediente to a receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an invalid ingrediente to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add an invalid ingrediente to a receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an ingrediente to an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add an ingrediente to an invalid receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ingrediente of a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid ingrediente of a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ingrediente to an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ingrediente to an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ingrediente non-associated to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado en la receta\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ingrediente non-associated to a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id_1}}/ingredientes/{{ingrediente_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id_1}}",
										"ingredientes",
										"{{ingrediente_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all ingredientes of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Get all ingredientes of a receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all ingredientes of an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes"
							]
						}
					},
					"response": [
						{
							"name": "Get all ingredientes of an invalid receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ingrediente of a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ingrediente of an invalid receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000",
								"ingredientes",
								"{{ingrediente_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ingrediente of an invalid receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/00000000-0000-0000-0000-000000000000/ingredientes/{{ingrediente_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"00000000-0000-0000-0000-000000000000",
										"ingredientes",
										"{{ingrediente_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid ingrediente of a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid ingrediente of a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ingrediente non-associated to a receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Ingrediente no encontrado en la receta\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cantidades/{{cantidad_id}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cantidades",
								"{{cantidad_id}}",
								"recetas",
								"{{receta_id}}",
								"ingredientes",
								"{{ingrediente_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ingrediente non-associated to a receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Rutina-Recetas",
			"item": [
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRutinaRecetaL\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRutinaRecetaE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRutinaRecetaD\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token escritura Receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenER\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaE\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token admin Rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenARu\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MateoRutinaT\",\r\n   \"password\": \"mate\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"rutina_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenARu}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"correr y queso\",\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas"
							]
						}
					},
					"response": [
						{
							"name": "Add rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add receta 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Receta para hacer queso con leche\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add receta 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso sin Leche\",\r\n    \"descripcion\": \"Receta para hacer queso sin leche\",\r\n    \"especificaciones\": \"Cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a receta to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a receta to a rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an invalid receta to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add an invalid receta to a rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a receta to an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a receta to an invalid rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a receta of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid receta of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a receta to an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a receta to an invalid rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a receta non-associated to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada en la rutina\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a receta non-associated to a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id_1}}/recetas/{{receta_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id_1}}",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all recetas of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Get all recetas of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all recetas of an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Get all recetas of an invalid rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"00000000-0000-0000-0000-000000000000",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update recetas of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n        \"id\": \"{{receta_id_2}}\",\r\n        \"nombre\": \"Queso sin Leche\",\r\n        \"descripcion\": \"Receta para hacer queso sin leche\",\r\n        \"especificaciones\": \"Cortar queso\",\r\n        \"infoAdicional\" : \"No info\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Update recetas of a rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"{{receta_id_2}}\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id_1}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id_1}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update invalid receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Update invalid receta of a rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update recetas of an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"{{receta_id_1}}\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Update recetas of an invalid rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"{{receta_id_1}}\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"00000000-0000-0000-0000-000000000000",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta of a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta of an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta of an invalid rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid receta of a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta non-associated to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada en la rutina\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta non-associated to a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Rutina-Recetas Admin",
			"item": [
				{
					"name": "Obtener token Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRutinaRecetaT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token Admin Receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAR\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JulianaRecetaT\",\r\n   \"password\": \"juli\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener token admin Rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenARu\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MateoRutinaT\",\r\n   \"password\": \"mate\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"rutina_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenARu}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"correr y queso\",\r\n    \"infoAdicional\": \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas"
							]
						}
					},
					"response": [
						{
							"name": "Add rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add receta 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAR}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"descripcion\": \"Receta para hacer queso con leche\",\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add receta 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"receta_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAR}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Queso sin Leche\",\r\n    \"descripcion\": \"Receta para hacer queso sin leche\",\r\n    \"especificaciones\": \"Cortar queso\",\r\n    \"infoAdicional\" : \"No info\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Add receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Queso con Leche\",\r\n    \"calTotales\": 1000,\r\n    \"especificaciones\": \"Agregar leche en un vaso y cortar queso\",\r\n    \"adicionales\" : \"No info\",\r\n    \"ingredientes\": [\r\n        {\r\n            \"nombre\": \"Queso\",\r\n            \"calorias\": 402,\r\n            \"infoAdicional\": \"No info\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a receta to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a receta to a rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/recetas/{{receta_id}}/ingredientes/{{ingrediente_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}",
										"ingredientes",
										"{{ingrediente_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an invalid receta to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add an invalid receta to a rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a receta to an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a receta to an invalid rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a receta of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid receta of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a receta to an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a receta to an invalid rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a receta non-associated to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada en la rutina\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a receta non-associated to a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id_1}}/recetas/{{receta_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id_1}}",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all recetas of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Get all recetas of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all recetas of an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Get all recetas of an invalid rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"00000000-0000-0000-0000-000000000000",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update recetas of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n        \"id\": \"{{receta_id_2}}\",\r\n        \"nombre\": \"Queso sin Leche\",\r\n        \"descripcion\": \"Receta para hacer queso sin leche\",\r\n        \"especificaciones\": \"Cortar queso\",\r\n        \"infoAdicional\" : \"No info\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Update recetas of a rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"{{receta_id_2}}\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id_1}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id_1}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update invalid receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Update invalid receta of a rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update recetas of an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"{{receta_id_1}}\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Update recetas of an invalid rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"{{receta_id_1}}\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"00000000-0000-0000-0000-000000000000",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta of a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta of an invalid rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Rutina no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta of an invalid rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/00000000-0000-0000-0000-000000000000/recetas/{{receta_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"00000000-0000-0000-0000-000000000000",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid receta of a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid receta of a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a receta non-associated to a rutina",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Receta no encontrada en la rutina\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id}}",
								"recetas",
								"{{receta_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a receta non-associated to a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id}}/recetas/{{receta_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id}}",
										"recetas",
										"{{receta_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Foro",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoL\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token lectura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoL\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoE\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token escritura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoE\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoD\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token delete",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoD\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"foro_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n    \"numPublicaciones\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros"
							]
						}
					},
					"response": [
						{
							"name": "Add foro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"4\",\n   \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n   \"numPublicaciones\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foro",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Foros",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of perfiles > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								""
							]
						}
					},
					"response": [
						{
							"name": "Get Foro",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/foro/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get foro",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/foro/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										"{{foro_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get non existent foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The foro with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get non existent foro",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/foro/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										"{{foro_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{$guid}}\",\n   \"titulo\": \"Haz esto YA\",\n   \"numPublicaciones\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Foro",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"titulo\": \"Haz esto YA\",\n   \"numPublicaciones\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foro/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										"{{foro_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete foro",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foro/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										"{{foro_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete non existent foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The foro with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete non existent foro",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"titulo\": \"Haz esto YA\",\n   \"numPublicaciones\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Publicacion",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionL\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token lectura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionL\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionE\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token escritura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionE\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionD\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token delete",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionD\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"publicacion_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Add Publicaciones",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Publicaciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of publicaciones > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Get publicaciones",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/publicaciones/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get publicacion",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/publicaciones/{{pulicaciones_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										"{{pulicaciones_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get non publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The publicacion with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get non existent publicacion",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/publicaciones/{{pulicaciones_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										"{{pulicaciones_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Publicacion",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/{{pulicaciones_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										"{{pulicaciones_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete Publicacion",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/{{pulicaciones_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										"{{pulicaciones_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete non existent publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The publicacion with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete non existent publicacion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"{{$guid}}\",\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/{{pulicaciones_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										"{{pulicaciones_id}}"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Rutina-Ejercicio",
			"item": [
				{
					"name": "Add an ejercicio to a rutina",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/{{rejercicio_id}}/rutinas/{{rutinas_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								"{{rejercicio_id}}",
								"rutinas",
								"{{rutinas_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Add an ejercicio to a receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/{{rejercicio_id}}/rutinas/{{rutinas_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										"{{rejercicio_id}}",
										"rutinas",
										"{{rutinas_id_1}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an ejercicio to an invalid  rutina",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/{{rejercicio_id}}/rutinas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								"{{rejercicio_id}}",
								"rutinas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add an ejercicio to an invalid  rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/{{rejercicio_id}}/rutinas/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										"{{rejercicio_id}}",
										"rutinas",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an invalid ejercicio to a rutina",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{rutina_id_1}}/ejercicios/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{rutina_id_1}}",
								"ejercicios",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add an invalid ejercicio to a rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{rutina_id_1}}/ejercicios/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{rutina_id_1}}",
										"ejercicios",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ejercicio of a rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/{{ruina_id}}/ingredientes/{{ejercicio_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								"{{ruina_id}}",
								"ingredientes",
								"{{ejercicio_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ejercicio of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/{{ruina_id}}/ingredientes/{{ejercicio_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										"{{ruina_id}}",
										"ingredientes",
										"{{ejercicio_id_1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an invalid ejercicio of a rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id}}",
								"ejercicio",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Get an invalid ejercicio of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id}}",
										"ejercicio",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ejercicio to an invalid rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id}}/00000000-0000-0000-0000-000000000000/ejercicio/{{ejercicio_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id}}",
								"00000000-0000-0000-0000-000000000000",
								"ejercicio",
								"{{ejercicio_id_1}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ejercicio to an invalid rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id}}/00000000-0000-0000-0000-000000000000/ejercicio/{{ejercicio_id_1}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id}}",
										"00000000-0000-0000-0000-000000000000",
										"ejercicio",
										"{{ejercicio_id_1}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an ejercicio non-associated to a rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id_1}}/ejercicio/{{ejercicio_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id_1}}",
								"ejercicio",
								"{{ejercicio_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an ejercicio non-associated to a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id_1}}/ejercicio/{{ejercicio_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id_1}}",
										"ejercicio",
										"{{ejercicio_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all ejericio of a rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicio/{{ejercicio_id}}/rutina",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicio",
								"{{ejercicio_id}}",
								"rutina"
							]
						}
					},
					"response": [
						{
							"name": "Get all ejericio of a rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicio/{{ejercicio_id}}/rutina",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicio",
										"{{ejercicio_id}}",
										"rutina"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all ejercicio of an invalid rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/00000000-0000-0000-0000-000000000000/ejercicio",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"00000000-0000-0000-0000-000000000000",
								"ejercicio"
							]
						}
					},
					"response": [
						{
							"name": "Get all ejercicio of an invalid rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/00000000-0000-0000-0000-000000000000/ejercicio",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"00000000-0000-0000-0000-000000000000",
										"ejercicio"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update ejercicio of a rutina",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"{{ingrediente_id_2}}\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id_1}}/ejercicio",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id_1}}",
								"ejercicio"
							]
						}
					},
					"response": [
						{
							"name": "Update ejercicio of a rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"{{ingrediente_id_2}}\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id_1}}/ejercicio",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id_1}}",
										"ejercicio"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update invalid ejercicio of a rutina",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutina/{{receta_id}}/ejercicio",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{receta_id}}",
								"ejercicio"
							]
						}
					},
					"response": [
						{
							"name": "Update invalid ejercicio of a rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutina/{{receta_id}}/ejercicio",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{receta_id}}",
										"ejercicio"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update ejercicio of an invalid rutina",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"{{ingrediente_id_1}}\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/rutina/00000000-0000-0000-0000-000000000000/ejercicio",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"00000000-0000-0000-0000-000000000000",
								"ejercicio"
							]
						}
					},
					"response": [
						{
							"name": "Update ejercicio of an invalid rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n       \"id\": \"{{ingrediente_id_1}}\"\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/rutina/00000000-0000-0000-0000-000000000000/ejercicio",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"00000000-0000-0000-0000-000000000000",
										"ejercicio"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ejercicio of a rutina",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/{{ejercicio_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id}}",
								"ejercicio",
								"{{ejercicio_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ejercicio of a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/{{ejercicio_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id}}",
										"ejercicio",
										"{{ejercicio_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ejercicio of an invalid rutina",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rruttina/00000000-0000-0000-0000-000000000000/ejercicio/{{ejercicio_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rruttina",
								"00000000-0000-0000-0000-000000000000",
								"ejercicio",
								"{{ejercicio_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ejercicio of an invalid rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rruttina/00000000-0000-0000-0000-000000000000/ejercicio/{{ejercicio_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rruttina",
										"00000000-0000-0000-0000-000000000000",
										"ejercicio",
										"{{ejercicio_id_2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an invalid ejercicio of a rutina",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id}}",
								"ejercicio",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Delete an invalid ejercicio of a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id}}",
										"ejercicio",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an ejercicio non-associated to a rutina",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/{{ejercicio_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutina",
								"{{rutina_id}}",
								"ejercicio",
								"{{ejercicio_id_2}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete an ejercicio non-associated to a rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutina/{{rutina_id}}/ejercicio/{{ejercicio_id_2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutina",
										"{{rutina_id}}",
										"ejercicio",
										"{{ejercicio_id_2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Rutina",
			"item": [
				{
					"name": "Get rutinas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								""
							]
						}
					},
					"response": [
						{
							"name": "Get rutinas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/?id=1",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"description": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get non existent rutina",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/?id=1000029",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1000029",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get non existent rutina",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/?id=1000029",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1000029",
											"description": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update rutina",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Update rutina",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/?id=1",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"description": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete rutina",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete rutina",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas/?id=1",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"description": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add rutina",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/rutinas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"rutinas"
							]
						}
					},
					"response": [
						{
							"name": "Add rutina",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/rutinas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"rutinas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Ejercicio",
			"item": [
				{
					"name": "Get ejercicios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								""
							]
						}
					},
					"response": [
						{
							"name": "Get ejercicios",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get ejercicio",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get ejercicio",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/?id=1",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"description": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get non existent ejercicio",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/?id=1000029",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1000029",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get non existent ejercicio",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/?id=1000029",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1000029",
											"description": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update ejercicio",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Update ejercicio",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/?id=1",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"description": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete ejercicio",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete ejercicio",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios/?id=1",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"description": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add ejercicio",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ejercicios",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ejercicios"
							]
						}
					},
					"response": [
						{
							"name": "Add ejercicio",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/ejercicios",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"ejercicios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Foro-Publicacion",
			"item": [
				{
					"name": "Obtener token Admin Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAR\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token Admin Publicacion",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token Admin Publicacion Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAF\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token Admin Publicacion",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"publicacion_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAR}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Add Publicaciones",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token Admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"foro_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAF}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n    \"numPublicaciones\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros"
							]
						}
					},
					"response": [
						{
							"name": "Add foro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"4\",\n   \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n   \"numPublicaciones\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foro",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token lectura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenL\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoPublicacionL\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token lectura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoPublicacionL\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token escritura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenE\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoPublicacionE\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token escritura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoPublicacionE\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenD\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoForoPublicacionD\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token delete",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoForoPublicacionD\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token escritura Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenER\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionE\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token escritura Publicacion",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionE\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add publicacion a un foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{$guid}}\",\n   \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n   \"numPublicaciones\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add publicacion a un foro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"4\",\n   \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n   \"numPublicaciones\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foro",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a publicacion in non exist foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The publicacion with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{$guid}}:\",\n   \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n   \"numPublicaciones\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}/publicaciones/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}",
								"publicaciones",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Add a publicacion in non exist foro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"{{$guid}}:\",\n   \"titulo\": \"5 ejercicios para eliminar tu grasa abdominal\",\n   \"numPublicaciones\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foros",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foros"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get todas las publicaciones del foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}",
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Get todas las publicaciones del foro",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/foro/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										"{{foro_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a publicacion in a non exist foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The foro with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenL}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/foros/00000000-0000-0000-0000-000000000000/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"00000000-0000-0000-0000-000000000000",
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Get a publicacion in a non exist foro",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/foros/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foros",
										"{{foro_id}}"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update publicaciones in a non exist foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The foro with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenE}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{$guid}}\",\n   \"titulo\": \"Haz esto YA\",\n   \"numPublicaciones\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/00000000-0000-0000-0000-000000000000/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"00000000-0000-0000-0000-000000000000",
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Update publicaciones in a non exist foro",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"{{$guid}}\",\n   \"titulo\": \"Haz esto YA\",\n   \"numPublicaciones\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foros/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foros",
										"{{foro_id}}"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete una publicacion de un foro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/foros/{{foro_id}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"{{foro_id}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete una publicacion de un foro",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"titulo\": \"Haz esto YA\",\n   \"numPublicaciones\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/foro/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foro",
										"{{foro_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a publicacion of foro non exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The foro with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenD}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/foros/00000000-0000-0000-0000-000000000000/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"foros",
								"00000000-0000-0000-0000-000000000000",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a publicacion of foro non exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/foros/{{foro_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"foros",
										"{{foro_id}}"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Perfil-Metricas",
			"item": [
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JuanT\",\r\n   \"password\": \"juan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add metricas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{metrica_id}}\",\n    \"nombre\": \"Juan\",\n    \"unidad\": \"Likes\",\n    \"valor\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/metricas/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"metricas",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Perfil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil"
							]
						}
					},
					"response": [
						{
							"name": "Add Perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfiles",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfiles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n        \"nombre\": \"Juan\",\n        \"correo\": \"jp.her@her.com\",\n        \"fechaDeNacimiento\": \"02/02/2000\",\n        \"documento\": 1002\n    }\n]"
						}
					]
				},
				{
					"name": "Add Metrica a un Perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add Metrica a un Perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"metricas",
										"{{metrica_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "242"
								},
								{
									"key": "ETag",
									"value": "W/\"f2-8u/q3UNTErSRpJy7AZKThffmWK8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002,\n    \"metricas\": [\n        {\n            \"id\": \"00000000-e89b-12d3-a456-426614174128\",\n            \"nombre\": \"Juan\",\n            \"unidad\": \"Likes\",\n            \"valor\": 1000\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add a metrica in non exist perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a metrica in non exist perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/metricas/{{metrica_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"metricas",
										"{{metrica_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Add a non existente metrica in perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la metrica con ese id no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"metricas",
								"{{metrica_id_mal}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a non existente metrica in perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id_mal}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"metricas",
										"{{metrica_id_mal}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "70"
								},
								{
									"key": "ETag",
									"value": "W/\"46-Qhx8uF3XiH1t1L3ytq7osKbseDM\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"la metrica con ese id no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Get todas las metricas del perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"metricas"
							]
						}
					},
					"response": [
						{
							"name": "Get todas las metricas del perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"metricas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "93"
								},
								{
									"key": "ETag",
									"value": "W/\"5d-yJU3DHic1Z3pRKDvK1sot7U46mw\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-e89b-12d3-a456-426614174128\",\n        \"nombre\": \"Juan\",\n        \"unidad\": \"Likes\",\n        \"valor\": 1000\n    }\n]"
						}
					]
				},
				{
					"name": "Get una metrica del perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get una metrica del perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"metricas",
										"{{metrica_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "91"
								},
								{
									"key": "ETag",
									"value": "W/\"5b-bEOjdtjuB3YwOfHDA2mBgPS99hY\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174128\",\n    \"nombre\": \"Juan\",\n    \"unidad\": \"Likes\",\n    \"valor\": 1000\n}"
						}
					]
				},
				{
					"name": "Get a metricas in a non exist perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/metricas",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"metricas"
							]
						}
					},
					"response": [
						{
							"name": "Get a metricas in a non exist perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/metricas",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"metricas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Get an inexistant metrica in a perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la metrica con ese id no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"metricas",
								"{{metrica_id_mal}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an inexistant metrica in a perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id_mal}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"metricas",
										"{{metrica_id_mal}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "70"
								},
								{
									"key": "ETag",
									"value": "W/\"46-Qhx8uF3XiH1t1L3ytq7osKbseDM\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"la metrica con ese id no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Delete una metrica de un perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete una metrica de un perfil",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/metricas/{{metrica_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"metricas",
										"{{metrica_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a metrica of perfil non exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/metricas/{{metrica_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"metricas",
								"{{metrica_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a metrica of perfil non exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/metricas/{{metrica_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"metricas",
										"{{metrica_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 04:59:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Perfil-Likes",
			"item": [
				{
					"name": "Obtener token admin Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAP\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"publicacion_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAP}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Add Publicaciones",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JuanT\",\r\n   \"password\": \"juan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Perfil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil"
							]
						}
					},
					"response": [
						{
							"name": "Add Perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfiles",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfiles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n        \"nombre\": \"Juan\",\n        \"correo\": \"jp.her@her.com\",\n        \"fechaDeNacimiento\": \"02/02/2000\",\n        \"documento\": 1002\n    }\n]"
						}
					]
				},
				{
					"name": "Add Like a un Perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"likes",
								"{{publicacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a like in non exist perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/likes/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"likes",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a like in non exist perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/likes/{{publicacion_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"likes",
										"{{publicacion_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:03:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Add a non existente like in perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el like con ese id no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes/{{publicacion_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"likes",
								"{{publicacion_id_mal}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a non existente like in perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes/{{publicacion_id_mal}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"likes",
										"{{publicacion_id_mal}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "ETag",
									"value": "W/\"43-SAncfTHXhQOJZIvD0UUuicnUMsI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:03:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el like con ese id no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Get todas los likes del perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"likes"
							]
						}
					},
					"response": [
						{
							"name": "Get todas los likes del perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"likes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "ETag",
									"value": "W/\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Get una metrica del perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(412);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"likes",
								"{{publicacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a likes in a non exist perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/likes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"likes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an inexistant like in a perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el like con ese id no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes/{{publicacion_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"likes",
								"{{publicacion_id_mal}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete un like de un perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/likes/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"likes",
								"{{publicacion_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a like of perfil non exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/likes/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"likes",
								"{{publicacion_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Perfil-Publicacion",
			"item": [
				{
					"name": "Obtener token admin Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"tokenAP\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Obtener token admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"username\": \"MajoPublicacionT\",\r\n   \"password\": \"majo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Publicacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"publicacion_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenAP}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Add Publicaciones",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"1\",\n   \"texto\": \"hola, soy nuevo\",\n   \"numMegusta\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/publicaciones/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"publicaciones",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener token admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"JuanT\",\r\n   \"password\": \"juan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Perfil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil"
							]
						}
					},
					"response": [
						{
							"name": "Add Perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfiles",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfiles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n        \"nombre\": \"Juan\",\n        \"correo\": \"jp.her@her.com\",\n        \"fechaDeNacimiento\": \"02/02/2000\",\n        \"documento\": 1002\n    }\n]"
						}
					]
				},
				{
					"name": "Add publicacion a un Perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add publicacion a un Perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"publicaciones",
										"{{publicacion_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "240"
								},
								{
									"key": "ETag",
									"value": "W/\"f0-AxHH9a3XmyLCmDSas+0EJEWdcOc\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:00:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-e89b-12d3-a456-426614174000\",\n    \"nombre\": \"Juan\",\n    \"correo\": \"jp.her@her.com\",\n    \"fechaDeNacimiento\": \"02/02/2000\",\n    \"documento\": 1002,\n    \"publicacion\": [\n        {\n            \"id\": \"00000000-0000-0000-a456-426614174128\",\n            \"texto\": \"hola, soy nuevo\",\n            \"numMegusta\": 1\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add a publicacion in non exist perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a publicacion in non exist perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/publicaciones/{{publicacion_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"publicaciones",
										"{{publicacion_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:00:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Add a non existente publicacion in perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la publicacion con ese id no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"publicaciones",
								"{{publicacion_id_mal}}"
							]
						}
					},
					"response": [
						{
							"name": "Add a non existente publicacion in perfil",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id_mal}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"publicaciones",
										"{{publicacion_id_mal}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "74"
								},
								{
									"key": "ETag",
									"value": "W/\"4a-0ekA+loWko1gmtuaI2VuWcn7Paw\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:00:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"la publicacion con ese id no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Get todas las publicaciones del perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Get todas las publicaciones del perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"publicaciones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "88"
								},
								{
									"key": "ETag",
									"value": "W/\"58-4Bwuqx3kDN813DcHfLzEgHaVY+w\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-0000-0000-a456-426614174128\",\n        \"texto\": \"hola, soy nuevo\",\n        \"numMegusta\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Get una publicacion del perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get una publicacion del perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"publicaciones",
										"{{publicacion_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "86"
								},
								{
									"key": "ETag",
									"value": "W/\"56-Dkyp6YavcUplH4eohXrv2QYMvqU\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-0000-0000-a456-426614174128\",\n    \"texto\": \"hola, soy nuevo\",\n    \"numMegusta\": 1\n}"
						}
					]
				},
				{
					"name": "Get a publicacion in a non exist perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/publicaciones",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"publicaciones"
							]
						}
					},
					"response": [
						{
							"name": "Get a publicacion in a non exist perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/publicaciones",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"publicaciones"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Get an inexistant publicacion in a perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"la publicacion con ese id no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id_mal}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"publicaciones",
								"{{publicacion_id_mal}}"
							]
						}
					},
					"response": [
						{
							"name": "Get an inexistant publicacion in a perfil",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id_mal}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"publicaciones",
										"{{publicacion_id_mal}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "74"
								},
								{
									"key": "ETag",
									"value": "W/\"4a-0ekA+loWko1gmtuaI2VuWcn7Paw\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"la publicacion con ese id no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Delete una publicacion de un perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete una publicacion de un perfil",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id}}/publicaciones/{{publicacion_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id}}",
										"publicaciones",
										"{{publicacion_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a publicacion of perfil non exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"el perfil con ese id no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/publicaciones/{{publicacion_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"perfil",
								"{{perfil_id_inexistente}}",
								"publicaciones",
								"{{publicacion_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete a publicacion of perfil non exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/perfil/{{perfil_id_inexistente}}/publicaciones/{{publicacion_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"perfil",
										"{{perfil_id_inexistente}}",
										"publicaciones",
										"{{publicacion_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-nuOltlGxMQxCzVnuqsDgbKVvoLo\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 05:01:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"el perfil con ese id no fue encontrado\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "publicacion_id_mal",
			"value": "00000000-1111-0000-a456-426614174128",
			"type": "string"
		},
		{
			"key": "perfil_id",
			"value": "00000000-e89b-12d3-a456-426614174000",
			"type": "string"
		},
		{
			"key": "perfil_id_inexistente",
			"value": "00000000-e89b-12d3-a456-000000000000",
			"type": "string"
		},
		{
			"key": "metrica_id",
			"value": "00000000-e89b-12d3-a456-426614174128",
			"type": "string"
		},
		{
			"key": "metrica_id_mal",
			"value": "00000000-0000-0000-a456-426614174128",
			"type": "string"
		}
	]
}